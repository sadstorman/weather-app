{"version":3,"sources":["components/AddCity.js","components/CityGridItem.js","components/CityGrid.js","App.js","index.js"],"names":["AddCity","setCiudad","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","city","window","alert","type","autoComplete","name","value","onChange","target","placeholder","CityGridItem","cosas","description","principal","temp","humidity","speed","country","celsius","flag","alt","src","toFixed","CityGrid","ciudades","info","setInfo","fechtWeather","a","url","fetch","json","weather","main","id","sys","wind","useEffect","map","App","ciudad","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57d2aa04.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCity = ({setCiudad}) => {\r\n\r\n    // const handleAdd = () => {\r\n    //     setCiudad(['Buenos saifers',...ciudad])\r\n    // }\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCiudad(city => [inputValue ,...city])\r\n            setInputValue('')\r\n        } else {\r\n            window.alert('Ingrese una ciudad valida')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"mb-3\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control mb-1\"\r\n                autoComplete=\"off\"\r\n                name=\"ciudad\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                placeholder=\"Ingrese su ciudad\">\r\n            </input>\r\n\r\n            <button type=\"submit\" className=\"btn btn-danger mt-2 w-100 text-uppercase\">Buscar</button>\r\n        </form>\r\n    )\r\n}\r\nAddCity.propTypes = {\r\n    setCiudad: PropTypes.func.isRequired \r\n}","import React from 'react'\r\n\r\nexport const CityGridItem = ({ cosas }) => {\r\n    const { description, principal, temp, humidity, name, speed, country } = cosas\r\n\r\n    let celsius = temp - 273.15\r\n    const flag = `https://www.countryflags.io/${country}/flat/48.png`\r\n    return (\r\n        <div className=\"col-4 my-2\">\r\n            <div className=\"card bg-dark text-white h-100\">\r\n                <ol className=\"card-body text-center\">\r\n                    <h2>{name}, {country} <img alt=\"flag\" src={flag}></img> </h2>\r\n                    <br />\r\n                    <p>Weather <i className=\"bi bi-globe\"></i> - <span>{principal} <small>({description})</small></span></p>\r\n                    <br />\r\n                    <p>Wind <i className=\"bi bi-wind\"></i> - <span>{speed} Km/h</span></p>\r\n                    <br />\r\n                    <p>Temp <i className=\"bi bi-thermometer-half\"></i> - <span>{(celsius.toFixed(2))}ºC / {temp}ºF </span></p>\r\n                    <br />\r\n                    <p>Humidity <i className=\"bi bi-moisture\"></i> - <span>{humidity}%</span></p>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CityGridItem } from './CityGridItem'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport const CityGrid = ({ ciudades }) => {\r\n\r\n    const [info, setInfo] = useState([])\r\n\r\n    const fechtWeather = async (ciudades) => {\r\n        const apiKey = 'ee8136a13a40fe437ca0a3c0179a2b4f'\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudades}&appid=${apiKey}`\r\n\r\n        const { weather, main, name, id, sys, wind } = await (await fetch(url)).json()\r\n        const {country} = sys\r\n        const {speed} = wind\r\n        const { temp, humidity } = main\r\n        const [{ description, main: principal }] = weather\r\n\r\n        // const informacion =  { description, principal, temp, humidity, name };\r\n        setInfo([...info, { description, principal, temp, humidity, name, id, speed, country }]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fechtWeather(ciudades)\r\n    }, [ciudades])\r\n\r\n\r\n    return (\r\n        <>\r\n            {info.map(cosas => {\r\n                return <CityGridItem\r\n                    key={cosas.id}\r\n                    cosas={cosas}\r\n                />\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n// CityGrid.propTypes = {\r\n//     ciudades: PropTypes..isRequired\r\n// }\r\n","import './index.css';\r\nimport React, { useState } from 'react'\r\nimport { AddCity } from './components/AddCity';\r\nimport { CityGrid } from './components/CityGrid';\r\n\r\nexport const App = () => {\r\n    const [ciudad, setCiudad] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h1 className=\"mt-2 text-center text-uppercase\">Clima actual</h1>\r\n                    <AddCity setCiudad={setCiudad} />\r\n                    <br />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {\r\n                        ciudad.map(ciudades => {\r\n                            return <CityGrid\r\n                                key={ciudades}\r\n                                ciudades={ciudades} />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport \"bootswatch/dist/cyborg/bootstrap.min.css\"\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}